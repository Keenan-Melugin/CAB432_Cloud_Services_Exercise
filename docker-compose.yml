version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: video_transcoder_db
    environment:
      POSTGRES_DB: video_transcoding
      POSTGRES_USER: transcoder
      POSTGRES_PASSWORD: transcoder123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U transcoder -d video_transcoding"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Video Transcoding Application
  app:
    build: .
    container_name: video_transcoder_app
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=video_transcoding
      - DB_USER=transcoder
      - DB_PASSWORD=transcoder123
      - DB_TYPE=postgres
      - STORAGE_PROVIDER=s3
      - AWS_REGION=ap-southeast-2
      - S3_ORIGINAL_BUCKET=n10992511-videotranscoder-original
      - S3_PROCESSED_BUCKET=n10992511-videotranscoder-processed
    volumes:
      - ./uploads:/app/uploads
      - ./data:/app/data
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Redis Cache (optional, for session management and job queuing)
  redis:
    image: redis:7-alpine
    container_name: video_transcoder_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: video_transcoder_network